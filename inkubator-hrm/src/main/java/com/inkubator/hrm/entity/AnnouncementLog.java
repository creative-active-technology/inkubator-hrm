package com.inkubator.hrm.entity;
// Generated Apr 6, 2015 2:16:23 PM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * AnnouncementLog generated by hbm2java
 */
@Entity
@Table(name = "announcement_log", catalog = "hrm"
)
public class AnnouncementLog implements java.io.Serializable {

    private long id;
    private Integer version;
    private Announcement announcement;
    private EmpData empData;
    private Boolean emailIsSend;
    private Boolean isAlreadyShow;
    private Date dateSend;
    private Date createdOn;
    private String createdBy;
    private String updatedBy;
    private Date updatedOn;

    public AnnouncementLog() {
    }

    public AnnouncementLog(long id) {
        this.id = id;
    }

    public AnnouncementLog(long id, Announcement announcement, EmpData empData, Boolean emailIsSend, Boolean isAlreadyShow, Date dateSend, Date createdOn, String createdBy) {
        this.id = id;
        this.announcement = announcement;
        this.empData = empData;
        this.emailIsSend = emailIsSend;
        this.isAlreadyShow = isAlreadyShow;
        this.dateSend = dateSend;
        this.createdOn = createdOn;
        this.createdBy = createdBy;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "announcement")
    public Announcement getAnnouncement() {
        return this.announcement;
    }

    public void setAnnouncement(Announcement announcement) {
        this.announcement = announcement;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "employee")
    public EmpData getEmpData() {
        return this.empData;
    }

    public void setEmpData(EmpData empData) {
        this.empData = empData;
    }

    @Column(name = "email_is_send")
    public Boolean getEmailIsSend() {
        return this.emailIsSend;
    }

    public void setEmailIsSend(Boolean emailIsSend) {
        this.emailIsSend = emailIsSend;
    }

    @Column(name = "is_already_show")
    public Boolean getIsAlreadyShow() {
        return this.isAlreadyShow;
    }

    public void setIsAlreadyShow(Boolean isAlreadyShow) {
        this.isAlreadyShow = isAlreadyShow;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "date_send", length = 10)
    public Date getDateSend() {
        return this.dateSend;
    }

    public void setDateSend(Date dateSend) {
        this.dateSend = dateSend;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "created_by", length = 45)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "updated_by", length = 45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }
}
