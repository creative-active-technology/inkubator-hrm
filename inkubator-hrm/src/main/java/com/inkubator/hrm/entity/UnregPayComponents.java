package com.inkubator.hrm.entity;
// Generated Dec 24, 2014 8:49:26 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * UnregPayComponents generated by hbm2java
 */
@Entity
@Table(name="unreg_pay_components" ,catalog="hrm_payroll", uniqueConstraints = @UniqueConstraint(columnNames = {"pay_salary_comp_id", "unreg_id"})
)
public class UnregPayComponents  implements java.io.Serializable {


     private Long id;
     private Integer version;
     private PaySalaryComponent paySalaryComponent;
     private UnregSalary unregSalary;
     private String descriptions;
     private String createdBy;
     private Date createdOn;
     private String updatedBy;
     private Date updatedOn;
     private Set<UnregPayComponentsException> unregPayComponentsExceptions = new HashSet<>(0);
     private Integer totalEmpData;
     private Double totalNominal;

    public UnregPayComponents() {
    }

	
    public UnregPayComponents(Long id, PaySalaryComponent paySalaryComponent, UnregSalary unregSalary) {
        this.id = id;
        this.paySalaryComponent = paySalaryComponent;
        this.unregSalary = unregSalary;
    }
    
    public UnregPayComponents(Long id, PaySalaryComponent paySalaryComponent, UnregSalary unregSalary, String descriptions, String createdBy, Date createdOn, String updatedBy, Date updatedOn) {
       this.id = id;
       this.paySalaryComponent = paySalaryComponent;
       this.unregSalary = unregSalary;
       this.descriptions = descriptions;
       this.createdBy = createdBy;
       this.createdOn = createdOn;
       this.updatedBy = updatedBy;
       this.updatedOn = updatedOn;
    }
   
    @Id
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pay_salary_comp_id", nullable=false)
    public PaySalaryComponent getPaySalaryComponent() {
        return this.paySalaryComponent;
    }
    
    public void setPaySalaryComponent(PaySalaryComponent paySalaryComponent) {
        this.paySalaryComponent = paySalaryComponent;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="unreg_id", nullable=false)
    public UnregSalary getUnregSalary() {
        return this.unregSalary;
    }
    
    public void setUnregSalary(UnregSalary unregSalary) {
        this.unregSalary = unregSalary;
    }
    
    @Column(name="descriptions", length=65535, columnDefinition = "Text")
    public String getDescriptions() {
        return this.descriptions;
    }
    
    public void setDescriptions(String descriptions) {
        this.descriptions = descriptions;
    }
    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }
    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "unregPayComponents")
    public Set<UnregPayComponentsException> getUnregPayComponentsExceptions() {
		return unregPayComponentsExceptions;
	}

	public void setUnregPayComponentsExceptions(
			Set<UnregPayComponentsException> unregPayComponentsExceptions) {
		this.unregPayComponentsExceptions = unregPayComponentsExceptions;
	}

	@Transient
	public Integer getTotalEmpData() {
		return totalEmpData;
	}

	public void setTotalEmpData(Integer totalEmpData) {
		this.totalEmpData = totalEmpData;
	}

	@Transient
	public Double getTotalNominal() {
		return totalNominal;
	}

	public void setTotalNominal(Double totalNominal) {
		this.totalNominal = totalNominal;
	}
    
}
