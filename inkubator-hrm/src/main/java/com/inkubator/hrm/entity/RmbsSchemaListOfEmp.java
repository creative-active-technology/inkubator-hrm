package com.inkubator.hrm.entity;

// Generated Mar 13, 2015 9:01:09 AM by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.inkubator.hrm.entity.EmpData;

/**
 * RmbsSchemaListOfEmp generated by hbm2java
 */
@Entity
@Table(name = "rmbs_schema_list_of_emp", catalog = "hrm"
)
public class RmbsSchemaListOfEmp implements java.io.Serializable {

	private RmbsSchemaListOfEmpId id;
	private Integer version;
	private EmpData empData;
	private RmbsSchema rmbsSchema;
	private String nomorSk;
	private String description;
	private Date createdOn;
	private String createdBy;
	private String updatedBy;
	private Date updatedOn;

	public RmbsSchemaListOfEmp() {
	}

	public RmbsSchemaListOfEmp(RmbsSchemaListOfEmpId id, EmpData empData,
			RmbsSchema rmbsSchema) {
		this.id = id;
		this.empData = empData;
		this.rmbsSchema = rmbsSchema;
	}

	@EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "empDataId", column = @Column(name = "emp_data_id", nullable = false)),
        @AttributeOverride(name = "rmbsSchemaId", column = @Column(name = "rmbs_schema_id", nullable = false))})
	public RmbsSchemaListOfEmpId getId() {
		return this.id;
	}

	public void setId(RmbsSchemaListOfEmpId id) {
		this.id = id;
	}

	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "emp_data_id", nullable = false, insertable = false, updatable = false)
	public EmpData getEmpData() {
		return this.empData;
	}

	public void setEmpData(EmpData empData) {
		this.empData = empData;
	}

	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rmbs_schema_id", nullable = false, insertable = false, updatable = false)
	public RmbsSchema getRmbsSchema() {
		return this.rmbsSchema;
	}

	public void setRmbsSchema(RmbsSchema rmbsSchema) {
		this.rmbsSchema = rmbsSchema;
	}

	@Column(name = "nomor_sk", length = 60)
	public String getNomorSk() {
		return this.nomorSk;
	}

	public void setNomorSk(String nomorSk) {
		this.nomorSk = nomorSk;
	}

	@Column(name = "description", length = 65535, columnDefinition = "Text")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

}
