package com.inkubator.hrm.entity;
// Generated Jun 25, 2014 4:51:03 PM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name = "city", catalog = "hrm", uniqueConstraints = @UniqueConstraint(columnNames = "city_code")
)
public class City implements java.io.Serializable {

    private long id;
    private Integer version;
    private Province province;
    private String createdBy;
    private Date createdOn;
    private String updatedBy;
    private Date updatedOn;
    private String cityCode;
    private String cityName;
    private String latitude;
    private String longitude;
    private Set<InstitutionEducation> institutionEducations = new HashSet<InstitutionEducation>(0);
    private Set<BioData> bioDatas = new HashSet<BioData>(0);

    public City() {
    }

    public City(long id) {
        this.id = id;
    }

    public City(long id, Province province, String createdBy, Date createdOn, String updatedBy, Date updatedOn, String cityCode, String cityName, String latitude, String longitude, Set<InstitutionEducation> institutionEducations) {
        this.id = id;
        this.province = province;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.updatedBy = updatedBy;
        this.updatedOn = updatedOn;
        this.cityCode = cityCode;
        this.cityName = cityName;
        this.latitude = latitude;
        this.longitude = longitude;
        this.institutionEducations = institutionEducations;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "province_id")
    public Province getProvince() {
        return this.province;
    }

    public void setProvince(Province province) {
        this.province = province;
    }

    @Column(name = "created_by", length = 45)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "updated_by", length = 45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Column(name = "city_code", unique = true, length = 8)
    public String getCityCode() {
        return this.cityCode;
    }

    public void setCityCode(String cityCode) {
        this.cityCode = cityCode;
    }

    @Column(name = "city_name", length = 60)
    public String getCityName() {
        return this.cityName;
    }

    public void setCityName(String cityName) {
        this.cityName = cityName;
    }

    @Column(name = "latitude", length = 45)
    public String getLatitude() {
        return this.latitude;
    }

    public void setLatitude(String latitude) {
        this.latitude = latitude;
    }

    @Column(name = "longitude", length = 45)
    public String getLongitude() {
        return this.longitude;
    }

    public void setLongitude(String longitude) {
        this.longitude = longitude;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "city")
    public Set<InstitutionEducation> getInstitutionEducations() {
        return this.institutionEducations;
    }

    public void setInstitutionEducations(Set<InstitutionEducation> institutionEducations) {
        this.institutionEducations = institutionEducations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "city")
    public Set<BioData> getBioDatas() {
        return this.bioDatas;
    }

    public void setBioDatas(Set<BioData> bioDatas) {
        this.bioDatas = bioDatas;
    }

}
