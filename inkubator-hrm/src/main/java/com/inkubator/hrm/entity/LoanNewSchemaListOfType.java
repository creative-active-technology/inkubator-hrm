package com.inkubator.hrm.entity;
// Generated Mar 26, 2015 1:07:27 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * LoanNewSchemaListOfType generated by hbm2java
 */
@Entity
@Table(name="loan_new_schema_list_of_type"
    ,catalog="hrm"
)
public class LoanNewSchemaListOfType  implements java.io.Serializable {


     private Long id;
     private Integer version;
     private LoanNewSchema loanNewSchema;
     private LoanNewType loanNewType;
     private Double maximumAllocation;
     private Double maximumApproval;
     private Double minimumAllocation;
     private Double minimumApproval;
     private Double minimumMonthlyInstallment;
     private String createdBy;
     private Date createdOn;
     private int maksimumHariTersedia;
     private int maxPeriode;
     private String updateBy;
     private Date updatedOn;
     private Boolean isActive;

    public LoanNewSchemaListOfType() {
    }

	
    public LoanNewSchemaListOfType(long id, LoanNewSchema loanNewSchema, LoanNewType loanNewType, int maksimumHariTersedia, int maxPeriode) {
        this.id = id;
        this.loanNewSchema = loanNewSchema;
        this.loanNewType = loanNewType;
        this.maksimumHariTersedia = maksimumHariTersedia;
        this.maxPeriode = maxPeriode;
    }
    public LoanNewSchemaListOfType(long id, LoanNewSchema loanNewSchema, LoanNewType loanNewType, Double maximumAllocation, Double maximumApproval, Double minimumAllocation, Double minimumApproval, Double minimumMonthlyInstallment, String createdBy, Date createdOn, int maksimumHariTersedia, int maxPeriode, String updateBy, Date updatedOn, Boolean isActive) {
       this.id = id;
       this.loanNewSchema = loanNewSchema;
       this.loanNewType = loanNewType;
       this.maximumAllocation = maximumAllocation;
       this.maximumApproval = maximumApproval;
       this.minimumAllocation = minimumAllocation;
       this.minimumApproval = minimumApproval;
       this.minimumMonthlyInstallment = minimumMonthlyInstallment;
       this.createdBy = createdBy;
       this.createdOn = createdOn;
       this.maksimumHariTersedia = maksimumHariTersedia;
       this.maxPeriode = maxPeriode;
       this.updateBy = updateBy;
       this.updatedOn = updatedOn;
       this.isActive = isActive;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="loan_new_schema_id", nullable=false)
    public LoanNewSchema getLoanNewSchema() {
        return this.loanNewSchema;
    }
    
    public void setLoanNewSchema(LoanNewSchema loanNewSchema) {
        this.loanNewSchema = loanNewSchema;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="loan_new_type_id", nullable=false)
    public LoanNewType getLoanNewType() {
        return this.loanNewType;
    }
    
    public void setLoanNewType(LoanNewType loanNewType) {
        this.loanNewType = loanNewType;
    }

    
    @Column(name="maximum_allocation", precision=22, scale=0)
    public Double getMaximumAllocation() {
        return this.maximumAllocation;
    }
    
    public void setMaximumAllocation(Double maximumAllocation) {
        this.maximumAllocation = maximumAllocation;
    }

    
    @Column(name="maximum_approval", precision=22, scale=0)
    public Double getMaximumApproval() {
        return this.maximumApproval;
    }
    
    public void setMaximumApproval(Double maximumApproval) {
        this.maximumApproval = maximumApproval;
    }

    
    @Column(name="minimum_allocation", precision=22, scale=0)
    public Double getMinimumAllocation() {
        return this.minimumAllocation;
    }
    
    public void setMinimumAllocation(Double minimumAllocation) {
        this.minimumAllocation = minimumAllocation;
    }

    
    @Column(name="minimum_approval", precision=22, scale=0)
    public Double getMinimumApproval() {
        return this.minimumApproval;
    }
    
    public void setMinimumApproval(Double minimumApproval) {
        this.minimumApproval = minimumApproval;
    }

    
    @Column(name="minimum_monthly_installment", precision=22, scale=0)
    public Double getMinimumMonthlyInstallment() {
        return this.minimumMonthlyInstallment;
    }
    
    public void setMinimumMonthlyInstallment(Double minimumMonthlyInstallment) {
        this.minimumMonthlyInstallment = minimumMonthlyInstallment;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    
    @Column(name="maksimum_hari_tersedia", nullable=false)
    public int getMaksimumHariTersedia() {
        return this.maksimumHariTersedia;
    }
    
    public void setMaksimumHariTersedia(int maksimumHariTersedia) {
        this.maksimumHariTersedia = maksimumHariTersedia;
    }

    
    @Column(name="max_periode", nullable=false)
    public int getMaxPeriode() {
        return this.maxPeriode;
    }
    
    public void setMaxPeriode(int maxPeriode) {
        this.maxPeriode = maxPeriode;
    }

    
    @Column(name="update_by", length=45)
    public String getUpdateBy() {
        return this.updateBy;
    }
    
    public void setUpdateBy(String updateBy) {
        this.updateBy = updateBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    
    @Column(name="is_active")
    public Boolean getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }
}





