package com.inkubator.hrm.entity;
// Generated Sep 28, 2015 11:05:44 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * SchedullerConfig generated by hbm2java
 */
@Entity
@Table(name="scheduler_config"
    ,catalog="hrm"
    , uniqueConstraints = @UniqueConstraint(columnNames="name") 
)
public class SchedulerConfig  implements java.io.Serializable {


     private long id;
     private Integer version;
     private String name;
     private String schedullerType;
     private String repeateType;
     private Date dateStartExecution;
     private Date startDate;
     private Date endDate;
     private Integer repeateNumber;
     private Date schedullerTime;
     private String createdBy;
     private Date cretedOn;
     private String updatedBy;
     private Date updatedOn;
     private Boolean isTimeDiv;
     private Date lastExecution;
     private Boolean isActive;
     private Integer hourDiv;
     private Integer minuteDiv;
     private Set<SchedulerLog> schedulerLogs = new HashSet<SchedulerLog>(0);

    public SchedulerConfig() {
    }

	
    public SchedulerConfig(long id) {
        this.id = id;
    }
    public SchedulerConfig(long id, String name, String schedullerType, String repeateType, Date dateStartExecution, Date startDate, Date endDate, Integer repeateNumber, Date schedullerTime, String createdBy, Date cretedOn, String updatedBy, Date updatedOn, Boolean isTimeDiv, Date lastExecution, Boolean isActive, Integer hourDiv, Integer minuteDiv, Set<SchedulerLog> schedulerLogs) {
       this.id = id;
       this.name = name;
       this.schedullerType = schedullerType;
       this.repeateType = repeateType;
       this.dateStartExecution = dateStartExecution;
       this.startDate = startDate;
       this.endDate = endDate;
       this.repeateNumber = repeateNumber;
       this.schedullerTime = schedullerTime;
       this.createdBy = createdBy;
       this.cretedOn = cretedOn;
       this.updatedBy = updatedBy;
       this.updatedOn = updatedOn;
       this.isTimeDiv = isTimeDiv;
       this.lastExecution = lastExecution;
       this.isActive = isActive;
       this.hourDiv = hourDiv;
       this.minuteDiv = minuteDiv;
       this.schedulerLogs = schedulerLogs;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

    
    @Column(name="name", unique=true, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="scheduller_type", length=100)
    public String getSchedullerType() {
        return this.schedullerType;
    }
    
    public void setSchedullerType(String schedullerType) {
        this.schedullerType = schedullerType;
    }

    
    @Column(name="repeate_type", length=100)
    public String getRepeateType() {
        return this.repeateType;
    }
    
    public void setRepeateType(String repeateType) {
        this.repeateType = repeateType;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_start_execution", length=10)
    public Date getDateStartExecution() {
        return this.dateStartExecution;
    }
    
    public void setDateStartExecution(Date dateStartExecution) {
        this.dateStartExecution = dateStartExecution;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="start_date", length=10)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="end_date", length=10)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    
    @Column(name="repeate_number")
    public Integer getRepeateNumber() {
        return this.repeateNumber;
    }
    
    public void setRepeateNumber(Integer repeateNumber) {
        this.repeateNumber = repeateNumber;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="scheduller_time", length=8)
    public Date getSchedullerTime() {
        return this.schedullerTime;
    }
    
    public void setSchedullerTime(Date schedullerTime) {
        this.schedullerTime = schedullerTime;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creted_on", length=19)
    public Date getCretedOn() {
        return this.cretedOn;
    }
    
    public void setCretedOn(Date cretedOn) {
        this.cretedOn = cretedOn;
    }

    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    
    @Column(name="is_time_div")
    public Boolean getIsTimeDiv() {
        return this.isTimeDiv;
    }
    
    public void setIsTimeDiv(Boolean isTimeDiv) {
        this.isTimeDiv = isTimeDiv;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_execution", length=19)
    public Date getLastExecution() {
        return this.lastExecution;
    }
    
    public void setLastExecution(Date lastExecution) {
        this.lastExecution = lastExecution;
    }

    
    @Column(name="is_active")
    public Boolean getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    
    @Column(name="hour_div")
    public Integer getHourDiv() {
        return this.hourDiv;
    }
    
    public void setHourDiv(Integer hourDiv) {
        this.hourDiv = hourDiv;
    }

    
    @Column(name="minute_div")
    public Integer getMinuteDiv() {
        return this.minuteDiv;
    }
    
    public void setMinuteDiv(Integer minuteDiv) {
        this.minuteDiv = minuteDiv;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="schedulerConfig")
    public Set<SchedulerLog> getSchedulerLogs() {
        return this.schedulerLogs;
    }
    
    public void setSchedulerLogs(Set<SchedulerLog> schedulerLogs) {
        this.schedulerLogs = schedulerLogs;
    }




}

