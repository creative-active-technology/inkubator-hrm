package com.inkubator.hrm.entity;
// Generated Oct 26, 2015 11:22:05 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * RecruitSelectionApplicantSchedulle generated by hbm2java
 */
@Entity
@Table(name="recruit_selection_applicant_schedulle"
    ,catalog="hrm"
)
public class RecruitSelectionApplicantSchedulle  implements java.io.Serializable {


     private Long id;
     private Integer version;
     private EmpData empData;
     private RecruitHireApply hireApply;
     private RecruitmenSelectionSeries selectionSeries;
     private Integer totalRecrut;
     private Date createdOn;
     private String createdBy;
     private Date updatedOn;
     private String updatedBy;
     private Set<RecruitSelectionApplicantSchedulleDetail> recruitSelectionApplicantSchedulleDetails = new HashSet<RecruitSelectionApplicantSchedulleDetail>(0);

    public RecruitSelectionApplicantSchedulle() {
    }

	
    public RecruitSelectionApplicantSchedulle(Long id) {
        this.id = id;
    }
    public RecruitSelectionApplicantSchedulle(Long id, EmpData empData, RecruitHireApply hireApply, Integer totalRecrut, Date createdOn, String createdBy, Date updatedOn, String updatedBy, Set<RecruitSelectionApplicantSchedulleDetail> recruitSelectionApplicantSchedulleDetails) {
       this.id = id;
       this.empData = empData;
       this.hireApply = hireApply;
       this.totalRecrut = totalRecrut;
       this.createdOn = createdOn;
       this.createdBy = createdBy;
       this.updatedOn = updatedOn;
       this.updatedBy = updatedBy;
       this.recruitSelectionApplicantSchedulleDetails = recruitSelectionApplicantSchedulleDetails;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="coordinator_emp_id")
    public EmpData getEmpData() {
        return this.empData;
    }
    
    public void setEmpData(EmpData empData) {
        this.empData = empData;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="hire_apply_id")
    public RecruitHireApply getHireApply() {
        return this.hireApply;
    }
    
    public void setHireApply(RecruitHireApply hireApply) {
        this.hireApply = hireApply;
    }
    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="selection_series_id")
    public RecruitmenSelectionSeries getSelectionSeries() {
		return selectionSeries;
	}

	public void setSelectionSeries(RecruitmenSelectionSeries selectionSeries) {
		this.selectionSeries = selectionSeries;
	}

	@Column(name="total_recrut")
    public Integer getTotalRecrut() {
        return this.totalRecrut;
    }
    
    public void setTotalRecrut(Integer totalRecrut) {
        this.totalRecrut = totalRecrut;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="recruitSelectionApplicantSchedulle")
    public Set<RecruitSelectionApplicantSchedulleDetail> getRecruitSelectionApplicantSchedulleDetails() {
        return this.recruitSelectionApplicantSchedulleDetails;
    }
    
    public void setRecruitSelectionApplicantSchedulleDetails(Set<RecruitSelectionApplicantSchedulleDetail> recruitSelectionApplicantSchedulleDetails) {
        this.recruitSelectionApplicantSchedulleDetails = recruitSelectionApplicantSchedulleDetails;
    }




}


