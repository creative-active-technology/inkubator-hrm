package com.inkubator.hrm.entity;
// Generated Jun 16, 2014 8:44:01 PM by Hibernate Tools 3.6.0

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * HrmMenuRole generated by hbm2java
 */
@Entity
@Table(name = "recruit_selection_applicant_passed", catalog = "hrm"
)
public class RecruitSelectionApplicantPassed implements java.io.Serializable {

    private RecruitSelectionApplicantPassedId id;
    private Integer version;
    private RecruitApplicant applicant;
    private RecruitHireApply hireApply;
    private EmployeeType employeeType;
    private Date latestTestDate;
    private Date letterExpired;
    private String placementStatus;
    private Date createdOn;
    private String createdBy;
    private String updatedBy;
    private Date updatedOn;

    public RecruitSelectionApplicantPassed() {
    }

    public RecruitSelectionApplicantPassed(RecruitSelectionApplicantPassedId id, RecruitHireApply hireApply, RecruitApplicant applicant) {
        this.id = id;
        this.applicant = applicant;
        this.hireApply = hireApply;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "applicantId", column = @Column(name = "applicant_id", nullable = false)),
        @AttributeOverride(name = "hireApplyId", column = @Column(name = "hire_apply_id", nullable = false))})
    public RecruitSelectionApplicantPassedId getId() {
        return this.id;
    }

    public void setId(RecruitSelectionApplicantPassedId id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "applicant_id", nullable = false, insertable = false, updatable = false)
    public RecruitApplicant getApplicant() {
        return applicant;
    }

    public void setApplicant(RecruitApplicant applicant) {
        this.applicant = applicant;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "hire_apply_id", nullable = false, insertable = false, updatable = false)
    public RecruitHireApply getHireApply() {
        return hireApply;
    }

    public void setHireApply(RecruitHireApply hireApply) {
        this.hireApply = hireApply;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "latest_test_date", length = 19)
    public Date getLatestTestDate() {
        return latestTestDate;
    }

    public void setLatestTestDate(Date latestTestDate) {
        this.latestTestDate = latestTestDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "letter_expired", length = 19)
    public Date getLetterExpired() {
        return letterExpired;
    }

    public void setLetterExpired(Date letterExpired) {
        this.letterExpired = letterExpired;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "job_status_id")
    public EmployeeType getEmployeeType() {
        return employeeType;
    }

    public void setEmployeeType(EmployeeType employeeType) {
        this.employeeType = employeeType;
    }

    @Column(name = "placement_status", nullable = false)
    public String getPlacementStatus() {
        return placementStatus;
    }

    public void setPlacementStatus(String placementStatus) {
        this.placementStatus = placementStatus;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "created_by", length = 45)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "updated_by", length = 45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

}
