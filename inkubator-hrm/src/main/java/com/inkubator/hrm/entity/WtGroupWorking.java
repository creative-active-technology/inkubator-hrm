package com.inkubator.hrm.entity;
// Generated Jun 4, 2014 10:35:01 AM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * WtGroupWorking generated by hbm2java
 */
@Entity
@Table(name = "wt_group_working", catalog = "hrm", uniqueConstraints = @UniqueConstraint(columnNames = "code")
)

public class WtGroupWorking implements java.io.Serializable {

    private long id;
    private Integer version;
    private String code;
    private String name;
    private Date beginTime;
    private Date endTime;
    private Boolean isPeriodic;
    private Double workingTimePerday;
    private Double workingTimePerweek;
    private Boolean overtimeBasedOnAttendance;
    private Boolean overtimeBasedOnRequest;
    private String createdBy;
    private Date createdOn;
    private String updatedBy;
    private Date updatedOn;
    private Boolean isActive;
    private Set<WtScheduleShift> wtScheduleShifts = new HashSet<WtScheduleShift>(0);

    public WtGroupWorking() {
    }

    public WtGroupWorking(long id) {
        this.id = id;
    }

    public WtGroupWorking(long id, String code, String name, Date beginTime, Date endTime, Boolean isPeriodic, Double workingTimePerday, Double workingTimePerweek, Boolean overtimeBasedOnAttendance, Boolean overtimeBasedOnRequest, String createdBy, Date createdOn, String updatedBy, Date updatedOn) {
        this.id = id;
        this.code = code;
        this.name = name;
        this.beginTime = beginTime;
        this.endTime = endTime;
        this.isPeriodic = isPeriodic;
        this.workingTimePerday = workingTimePerday;
        this.workingTimePerweek = workingTimePerweek;
        this.overtimeBasedOnAttendance = overtimeBasedOnAttendance;
        this.overtimeBasedOnRequest = overtimeBasedOnRequest;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.updatedBy = updatedBy;
        this.updatedOn = updatedOn;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "code", unique = true, length = 15)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "name", length = 45)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "begin_time", length = 19)
    public Date getBeginTime() {
        return this.beginTime;
    }

    public void setBeginTime(Date beginTime) {
        this.beginTime = beginTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", length = 19)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "is_periodic")
    public Boolean getIsPeriodic() {
        return this.isPeriodic;
    }

    public void setIsPeriodic(Boolean isPeriodic) {
        this.isPeriodic = isPeriodic;
    }

    @Column(name = "working_time_perday", precision = 22, scale = 0)
    public Double getWorkingTimePerday() {
        return this.workingTimePerday;
    }

    public void setWorkingTimePerday(Double workingTimePerday) {
        this.workingTimePerday = workingTimePerday;
    }

    @Column(name = "working_time_perweek", precision = 22, scale = 0)
    public Double getWorkingTimePerweek() {
        return this.workingTimePerweek;
    }

    public void setWorkingTimePerweek(Double workingTimePerweek) {
        this.workingTimePerweek = workingTimePerweek;
    }

    @Column(name = "overtime_based_on_attendance")
    public Boolean getOvertimeBasedOnAttendance() {
        return this.overtimeBasedOnAttendance;
    }

    public void setOvertimeBasedOnAttendance(Boolean overtimeBasedOnAttendance) {
        this.overtimeBasedOnAttendance = overtimeBasedOnAttendance;
    }

    @Column(name = "overtime_based_on_request")
    public Boolean getOvertimeBasedOnRequest() {
        return this.overtimeBasedOnRequest;
    }

    public void setOvertimeBasedOnRequest(Boolean overtimeBasedOnRequest) {
        this.overtimeBasedOnRequest = overtimeBasedOnRequest;
    }

    @Column(name = "created_by", length = 45)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "updated_by", length = 45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "wtGroupWorking", orphanRemoval = true)
    public Set<WtScheduleShift> getWtScheduleShifts() {
        return this.wtScheduleShifts;
    }

    public void setWtScheduleShifts(Set<WtScheduleShift> wtScheduleShifts) {
        this.wtScheduleShifts = wtScheduleShifts;
    }

    @Column(name = "is_active", nullable = false)
    public Boolean getIsActive() {
        return isActive;
    }

    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    public WtGroupWorking(String code) {
        this.code = code;
    }
    
    

}
