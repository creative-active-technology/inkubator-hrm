package com.inkubator.hrm.entity;

// Generated Mar 13, 2015 9:01:09 AM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * RmbsType generated by hbm2java
 */
@Entity
@Table(name = "rmbs_application", catalog = "hrm")
public class RmbsApplication implements java.io.Serializable {

	private Long id;
	private Integer version;
	private String code;
	private EmpData empData;
	private RmbsType rmbsType;
	private Currency currency;
	private String purpose;
	private Date applicationDate;
	private Integer applicationStatus;
	private String description;
	private byte[] receiptAttachment;
	private BigDecimal nominal;
	private String approvalActivityNumber;
	private String createdBy;
	private Date createdOn;
	private String updatedBy;
	private Date updatedOn;

	public RmbsApplication() {
	}

	public RmbsApplication(Long id) {
		this.id = id;
	}

	@Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "rmbs_application_seq_gen")
    @SequenceGenerator(name = "rmbs_application_seq_gen", sequenceName = "RMBS_APPLICATION_SEQ")
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Version
    @Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "code", unique = true, nullable = false, length = 12)
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}
		
	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "emp_data_id", nullable = false)
	public EmpData getEmpData() {
		return empData;
	}

	public void setEmpData(EmpData empData) {
		this.empData = empData;
	}	
	
	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rmbs_type_id", nullable = false)
	public RmbsType getRmbsType() {
		return rmbsType;
	}

	public void setRmbsType(RmbsType rmbsType) {
		this.rmbsType = rmbsType;
	}
		
	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "currency_id", nullable = false)	
	public Currency getCurrency() {
		return currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "application_date", length = 19, nullable = false)	
	public Date getApplicationDate() {
		return applicationDate;
	}

	public void setApplicationDate(Date applicationDate) {
		this.applicationDate = applicationDate;
	}

	@Column(name = "application_status", nullable = false)
	public Integer getApplicationStatus() {
		return applicationStatus;
	}

	public void setApplicationStatus(Integer applicationStatus) {
		this.applicationStatus = applicationStatus;
	}

	@Column(name = "purpose", length = 65535, columnDefinition = "Text", nullable = false)
	public String getPurpose() {
		return purpose;
	}

	public void setPurpose(String purpose) {
		this.purpose = purpose;
	}

	@Column(name = "description", length = 65535, columnDefinition = "Text")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}	
	
	@Column(name = "receipt_attachment", columnDefinition = "MEDIUMBLOB")
	public byte[] getReceiptAttachment() {
		return receiptAttachment;
	}

	public void setReceiptAttachment(byte[] receiptAttachment) {
		this.receiptAttachment = receiptAttachment;
	}	
	
	@Column(name = "nominal", precision = 10, scale = 0, nullable = false)
	public BigDecimal getNominal() {
		return nominal;
	}

	public void setNominal(BigDecimal nominal) {
		this.nominal = nominal;
	}
	
	@Column(name = "approval_activity_number", length = 45, unique = true)
    public String getApprovalActivityNumber() {
        return approvalActivityNumber;
    }

    public void setApprovalActivityNumber(String approvalActivityNumber) {
        this.approvalActivityNumber = approvalActivityNumber;
    }

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

}
