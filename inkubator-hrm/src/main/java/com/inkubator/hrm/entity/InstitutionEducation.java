package com.inkubator.hrm.entity;
// Generated Jun 25, 2014 4:51:03 PM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * InstitutionEducation generated by hbm2java
 */
@Entity
@Table(name = "institution_education", catalog = "hrm", uniqueConstraints = @UniqueConstraint(columnNames = "institution_education_code")
)
public class InstitutionEducation implements java.io.Serializable {

    private long id;
    private Integer version;
    private City city;
    private EducationLevel educationLevel;
    private String createdBy;
    private Date createdOn;
    private String updatedBy;
    private Date updatedOn;
    private String institutionEducationCode;
    private String institutionEducationName;
    private String address;
    private Integer postalCode;
    private String description;
    private Set<BioEducationHistory> educationHistorys = new HashSet<BioEducationHistory>(0);

    public InstitutionEducation() {
    }

    public InstitutionEducation(long id) {
        this.id = id;
    }

    public InstitutionEducation(long id, City city, String createdBy, Date createdOn, String updatedBy, Date updatedOn, String institutionEducationCode, String institutionEducationName, String address, Integer postalCode, Set<BioEducationHistory> educationHistorys) {
        this.id = id;
        this.city = city;
        this.createdBy = createdBy;
        this.createdOn = createdOn;
        this.updatedBy = updatedBy;
        this.updatedOn = updatedOn;
        this.institutionEducationCode = institutionEducationCode;
        this.institutionEducationName = institutionEducationName;
        this.address = address;
        this.postalCode = postalCode;
        this.educationHistorys = educationHistorys;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "city_id")
    public City getCity() {
        return this.city;
    }

    public void setCity(City city) {
        this.city = city;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "education_level_id")
    public EducationLevel getEducationLevel() {
        return educationLevel;
    }

    public void setEducationLevel(EducationLevel educationLevel) {
        this.educationLevel = educationLevel;
    }

    @Column(name = "created_by", length = 45)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "updated_by", length = 45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Column(name = "institution_education_code", unique = true, length = 8)
    public String getInstitutionEducationCode() {
        return this.institutionEducationCode;
    }

    public void setInstitutionEducationCode(String institutionEducationCode) {
        this.institutionEducationCode = institutionEducationCode;
    }

    @Column(name = "institution_education_name", length = 60)
    public String getInstitutionEducationName() {
        return this.institutionEducationName;
    }

    public void setInstitutionEducationName(String institutionEducationName) {
        this.institutionEducationName = institutionEducationName;
    }

    @Column(name = "address", length = 65535, columnDefinition = "Text")
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Column(name = "postal_code")
    public Integer getPostalCode() {
        return this.postalCode;
    }

    public void setPostalCode(Integer postalCode) {
        this.postalCode = postalCode;
    }
        
    @Column(name = "description", length = 65535, columnDefinition = "Text")
    public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "institutionEducation")
    public Set<BioEducationHistory> getEducationHistorys() {
        return educationHistorys;
    }

    public void setEducationHistorys(Set<BioEducationHistory> educationHistorys) {
        this.educationHistorys = educationHistorys;
    }

}
