package com.inkubator.hrm.entity;
// Generated Apr 22, 2015 3:42:31 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * RecruitMppPeriod generated by hbm2java
 */
@Entity
@Table(name="recruit_mpp_period"
    ,catalog="hrm"
    , uniqueConstraints = @UniqueConstraint(columnNames="code") 
)
public class RecruitMppPeriod  implements java.io.Serializable {


     private long id;
     private Integer version;
     private String code;
     private String name;
     private Date periodeStart;
     private Date periodeEnd;
     private Date createdOn;
     private String createdBy;
     private Date updatedOn;
     private String updatedBy;
     private Set<RecruitHireApply> recruitHireApplies = new HashSet<RecruitHireApply>(0);
     private Set<RecruitMppApply> recruitMppApplies = new HashSet<RecruitMppApply>(0);

    public RecruitMppPeriod() {
    }

	
    public RecruitMppPeriod(long id, String code, String name, Date periodeStart, Date periodeEnd) {
        this.id = id;
        this.code = code;
        this.name = name;
        this.periodeStart = periodeStart;
        this.periodeEnd = periodeEnd;
    }
    public RecruitMppPeriod(long id, String code, String name, Date periodeStart, Date periodeEnd, Date createdOn, String createdBy, Date updatedOn, String updatedBy, Set<RecruitHireApply> recruitHireApplies, Set<RecruitMppApply> recruitMppApplies) {
       this.id = id;
       this.code = code;
       this.name = name;
       this.periodeStart = periodeStart;
       this.periodeEnd = periodeEnd;
       this.createdOn = createdOn;
       this.createdBy = createdBy;
       this.updatedOn = updatedOn;
       this.updatedBy = updatedBy;
       this.recruitHireApplies = recruitHireApplies;
       this.recruitMppApplies = recruitMppApplies;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

    
    @Column(name="code", unique=true, nullable=false, length=12)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="periode_start", nullable=false, length=10)
    public Date getPeriodeStart() {
        return this.periodeStart;
    }
    
    public void setPeriodeStart(Date periodeStart) {
        this.periodeStart = periodeStart;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="periode_end", nullable=false, length=10)
    public Date getPeriodeEnd() {
        return this.periodeEnd;
    }
    
    public void setPeriodeEnd(Date periodeEnd) {
        this.periodeEnd = periodeEnd;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="recruitMppPeriod")
    public Set<RecruitHireApply> getRecruitHireApplies() {
        return this.recruitHireApplies;
    }
    
    public void setRecruitHireApplies(Set<RecruitHireApply> recruitHireApplies) {
        this.recruitHireApplies = recruitHireApplies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="recruitMppPeriod")
    public Set<RecruitMppApply> getRecruitMppApplies() {
        return this.recruitMppApplies;
    }
    
    public void setRecruitMppApplies(Set<RecruitMppApply> recruitMppApplies) {
        this.recruitMppApplies = recruitMppApplies;
    }




}


