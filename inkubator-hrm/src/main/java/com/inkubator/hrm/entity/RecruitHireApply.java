package com.inkubator.hrm.entity;
// Generated Apr 22, 2015 3:42:31 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * RecruitHireApply generated by hbm2java
 */
@Entity
@Table(name="recruit_hire_apply"
    ,catalog="hrm"
    , uniqueConstraints = @UniqueConstraint(columnNames="req_hire_code") 
)
public class RecruitHireApply  implements java.io.Serializable {


     private long id;
     private Integer version;
     private Currency currency;
     private EmployeeType employeeType;
     private Jabatan jabatan;
     private RecruitMppPeriod recruitMppPeriod;
     private Date proposeDate;
     private Date efectiveDate;
     private String reqHireCode;
     private int candidateCountRequest;
     private Long salaryMin;
     private Long salaryMax;
     private String reason;
     private String gender;
     private String maritalStatus;
     private Integer ageMin;
     private Integer ageMax;
     private Double gpaMin;
     private Double gpaMax;
     private Date createdOn;
     private String createdBy;
     private Date updatedOn;
     private String updatedBy;
     private Set<RecruitHireApplyDetail> recruitHireApplyDetails = new HashSet<RecruitHireApplyDetail>(0);

    public RecruitHireApply() {
    }

	
    public RecruitHireApply(long id, EmployeeType employeeType, Jabatan jabatan, RecruitMppPeriod recruitMppPeriod, Date efectiveDate, String reqHireCode, int candidateCountRequest) {
        this.id = id;
        this.employeeType = employeeType;
        this.jabatan = jabatan;
        this.recruitMppPeriod = recruitMppPeriod;
        this.efectiveDate = efectiveDate;
        this.reqHireCode = reqHireCode;
        this.candidateCountRequest = candidateCountRequest;
    }
    public RecruitHireApply(long id, Currency currency, EmployeeType employeeType, Jabatan jabatan, RecruitMppPeriod recruitMppPeriod, Date proposeDate, Date efectiveDate, String reqHireCode, int candidateCountRequest, Long salaryMin, Long salaryMax, String reason, String gender, String maritalStatus, Integer ageMin, Integer ageMax, Double gpaMin, Double gpaMax, Date createdOn, String createdBy, Date updatedOn, String updatedBy, Set<RecruitHireApplyDetail> recruitHireApplyDetails) {
       this.id = id;
       this.currency = currency;
       this.employeeType = employeeType;
       this.jabatan = jabatan;
       this.recruitMppPeriod = recruitMppPeriod;
       this.proposeDate = proposeDate;
       this.efectiveDate = efectiveDate;
       this.reqHireCode = reqHireCode;
       this.candidateCountRequest = candidateCountRequest;
       this.salaryMin = salaryMin;
       this.salaryMax = salaryMax;
       this.reason = reason;
       this.gender = gender;
       this.maritalStatus = maritalStatus;
       this.ageMin = ageMin;
       this.ageMax = ageMax;
       this.gpaMin = gpaMin;
       this.gpaMax = gpaMax;
       this.createdOn = createdOn;
       this.createdBy = createdBy;
       this.updatedOn = updatedOn;
       this.updatedBy = updatedBy;
       this.recruitHireApplyDetails = recruitHireApplyDetails;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="salary_curr_id")
    public Currency getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="job_status_id", nullable=false)
    public EmployeeType getEmployeeType() {
        return this.employeeType;
    }
    
    public void setEmployeeType(EmployeeType employeeType) {
        this.employeeType = employeeType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="jabatan_id", nullable=false)
    public Jabatan getJabatan() {
        return this.jabatan;
    }
    
    public void setJabatan(Jabatan jabatan) {
        this.jabatan = jabatan;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="recruit_mpp_id", nullable=false)
    public RecruitMppPeriod getRecruitMppPeriod() {
        return this.recruitMppPeriod;
    }
    
    public void setRecruitMppPeriod(RecruitMppPeriod recruitMppPeriod) {
        this.recruitMppPeriod = recruitMppPeriod;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="propose_date", length=10)
    public Date getProposeDate() {
        return this.proposeDate;
    }
    
    public void setProposeDate(Date proposeDate) {
        this.proposeDate = proposeDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="efective_date", nullable=false, length=10)
    public Date getEfectiveDate() {
        return this.efectiveDate;
    }
    
    public void setEfectiveDate(Date efectiveDate) {
        this.efectiveDate = efectiveDate;
    }

    
    @Column(name="req_hire_code", unique=true, nullable=false, length=12)
    public String getReqHireCode() {
        return this.reqHireCode;
    }
    
    public void setReqHireCode(String reqHireCode) {
        this.reqHireCode = reqHireCode;
    }

    
    @Column(name="candidate_count_request", nullable=false)
    public int getCandidateCountRequest() {
        return this.candidateCountRequest;
    }
    
    public void setCandidateCountRequest(int candidateCountRequest) {
        this.candidateCountRequest = candidateCountRequest;
    }

    
    @Column(name="salary_min", precision=10, scale=0)
    public Long getSalaryMin() {
        return this.salaryMin;
    }
    
    public void setSalaryMin(Long salaryMin) {
        this.salaryMin = salaryMin;
    }

    
    @Column(name="salary_max", precision=10, scale=0)
    public Long getSalaryMax() {
        return this.salaryMax;
    }
    
    public void setSalaryMax(Long salaryMax) {
        this.salaryMax = salaryMax;
    }

    
    @Column(name="reason")
    public String getReason() {
        return this.reason;
    }
    
    public void setReason(String reason) {
        this.reason = reason;
    }

    
    @Column(name="gender", length=6)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="marital_status", length=7)
    public String getMaritalStatus() {
        return this.maritalStatus;
    }
    
    public void setMaritalStatus(String maritalStatus) {
        this.maritalStatus = maritalStatus;
    }

    
    @Column(name="age_min")
    public Integer getAgeMin() {
        return this.ageMin;
    }
    
    public void setAgeMin(Integer ageMin) {
        this.ageMin = ageMin;
    }

    
    @Column(name="age_max")
    public Integer getAgeMax() {
        return this.ageMax;
    }
    
    public void setAgeMax(Integer ageMax) {
        this.ageMax = ageMax;
    }

    
    @Column(name="gpa_min", precision=22, scale=0)
    public Double getGpaMin() {
        return this.gpaMin;
    }
    
    public void setGpaMin(Double gpaMin) {
        this.gpaMin = gpaMin;
    }

    
    @Column(name="gpa_max", precision=22, scale=0)
    public Double getGpaMax() {
        return this.gpaMax;
    }
    
    public void setGpaMax(Double gpaMax) {
        this.gpaMax = gpaMax;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="recruitHireApply")
    public Set<RecruitHireApplyDetail> getRecruitHireApplyDetails() {
        return this.recruitHireApplyDetails;
    }
    
    public void setRecruitHireApplyDetails(Set<RecruitHireApplyDetail> recruitHireApplyDetails) {
        this.recruitHireApplyDetails = recruitHireApplyDetails;
    }




}


