package com.inkubator.hrm.entity;
// Generated Apr 15, 2015 2:40:35 PM by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * OrgTypeOfSpecList generated by hbm2java
 */
@Entity
@Table(name="org_type_of_spec_list"
    ,catalog="hrm"
    , uniqueConstraints = @UniqueConstraint(columnNames="org_type_of_spec_list_code") 
)
public class OrgTypeOfSpecList  implements java.io.Serializable {


     private Long id;
     private Integer version;
     private OrgTypeOfSpec orgTypeOfSpec;
     private String code;
     private String name;
     private String description;
     private Date createdOn;
     private Date updatedOn;
     private String createdBy;
     private String updatedBy;
     private Set<OrgTypeOfSpecListKlasifikasi> orgTypeOfSpecListKlasifikasis = new HashSet<OrgTypeOfSpecListKlasifikasi>(0);
     List<KlasifikasiKerja> klasifikasiKerja = new ArrayList<>();

    public OrgTypeOfSpecList() {
    }

	
    public OrgTypeOfSpecList(Long id, OrgTypeOfSpec orgTypeOfSpec, String code) {
        this.id = id;
        this.orgTypeOfSpec = orgTypeOfSpec;
        this.code = code;
    }
    public OrgTypeOfSpecList(Long id, OrgTypeOfSpec orgTypeOfSpec, String code, String name, String description, Date createdOn, Date updatedOn, String createdBy, String updatedBy) {
       this.id = id;
       this.orgTypeOfSpec = orgTypeOfSpec;
       this.code = code;
       this.name = name;
       this.description = description;
       this.createdOn = createdOn;
       this.updatedOn = updatedOn;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="org_type_of_spec_id", nullable=false)
    public OrgTypeOfSpec getOrgTypeOfSpec() {
        return this.orgTypeOfSpec;
    }
    
    public void setOrgTypeOfSpec(OrgTypeOfSpec orgTypeOfSpec) {
        this.orgTypeOfSpec = orgTypeOfSpec;
    }

    
    @Column(name="org_type_of_spec_list_code", unique=true, nullable=false, length=10)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

    
    @Column(name="org_type_of_spec_list_name", length=80)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name = "description", length = 65535, columnDefinition = "Text")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (id ^ (id >>> 32));
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		OrgTypeOfSpecList other = (OrgTypeOfSpecList) obj;
		if (id != other.id)
			return false;
		return true;
	}
        
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy="orgTypeOfSpecList", orphanRemoval = true)
    public Set<OrgTypeOfSpecListKlasifikasi> getOrgTypeOfSpecListKlasifikasis() {
        return this.orgTypeOfSpecListKlasifikasis;
    }
    
    public void setOrgTypeOfSpecListKlasifikasis(Set<OrgTypeOfSpecListKlasifikasi> orgTypeOfSpecListKlasifikasis) {
        this.orgTypeOfSpecListKlasifikasis = orgTypeOfSpecListKlasifikasis;
    }

    @Transient
	public List<KlasifikasiKerja> getKlasifikasiKerja() {
		return klasifikasiKerja;
	}


	public void setKlasifikasiKerja(List<KlasifikasiKerja> klasifikasiKerja) {
		this.klasifikasiKerja = klasifikasiKerja;
	}

    
}


