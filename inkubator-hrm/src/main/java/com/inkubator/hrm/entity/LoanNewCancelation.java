package com.inkubator.hrm.entity;
// Generated Apr 13, 2015 10:45:44 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * LoanNewCancelation generated by hbm2java
 */
@Entity
@Table(name="loan_new_cancelation"
    ,catalog="hrm"
    , uniqueConstraints = {@UniqueConstraint(columnNames="loan_cancellation_number"), @UniqueConstraint(columnNames="approval_activity_number")} 
)
public class LoanNewCancelation  implements java.io.Serializable {


     private long id;
     private Integer version;
     private String loanCancellationNumber;
     private String loanNumber;
     private String approvalActivityNumber;
     private Date cancelationDate;
     private EmpData empData;
     private LoanNewApplication loanNewApplication;
     private LoanNewSchema loanNewSchema;
     private LoanNewType loanNewType;
     private String reason;
     private Date createdOn;
     private String createdBy;
     private String updatedBy;
     private Date updatedOn;

    public LoanNewCancelation() {
    }

	
    public LoanNewCancelation(long id, String loanCancellationNumber, String loanNumber) {
        this.id = id;
        this.loanCancellationNumber = loanCancellationNumber;
        this.loanNumber = loanNumber;
    }
    public LoanNewCancelation(long id, String loanCancellationNumber, String loanNumber, String approvalActivityNumber, Date cancelationDate, String reason, Date createdOn, String createdBy, String updatedBy, Date updatedOn) {
       this.id = id;
       this.loanCancellationNumber = loanCancellationNumber;
       this.loanNumber = loanNumber;
       this.approvalActivityNumber = approvalActivityNumber;
       this.cancelationDate = cancelationDate;
       this.reason = reason;
       this.createdOn = createdOn;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.updatedOn = updatedOn;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }
    
    @Column(name="loan_cancellation_number", unique=true, nullable=false, length=60)
    public String getLoanCancellationNumber() {
        return loanCancellationNumber;
    }

    public void setLoanCancellationNumber(String loanCancellationNumber) {
        this.loanCancellationNumber = loanCancellationNumber;
    }
    
    @Column(name="loan_number", nullable=false, length=45)
    public String getLoanNumber() {
        return loanNumber;
    }

    public void setLoanNumber(String loanNumber) {
        this.loanNumber = loanNumber;
    }

    @Column(name="approval_activity_number", unique=true, length=45)
    public String getApprovalActivityNumber() {
        return this.approvalActivityNumber;
    }
    
    public void setApprovalActivityNumber(String approvalActivityNumber) {
        this.approvalActivityNumber = approvalActivityNumber;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="cancelation_date", length=10)
    public Date getCancelationDate() {
        return this.cancelationDate;
    }
    
    public void setCancelationDate(Date cancelationDate) {
        this.cancelationDate = cancelationDate;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="emp_data_id", nullable=false)
    public EmpData getEmpData() {
        return empData;
    }

    public void setEmpData(EmpData empData) {
        this.empData = empData;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="loan_new_schema_id", nullable=false)
    public LoanNewSchema getLoanNewSchema() {
        return loanNewSchema;
    }

    public void setLoanNewSchema(LoanNewSchema loanNewSchema) {
        this.loanNewSchema = loanNewSchema;
    }
    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="loan_new_type_id", nullable=false)
    public LoanNewType getLoanNewType() {
        return loanNewType;
    }

    public void setLoanNewType(LoanNewType loanNewType) {
        this.loanNewType = loanNewType;
    }
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "loan_id", nullable = false)
    public LoanNewApplication getLoanNewApplication() {
        return loanNewApplication;
    }

    public void setLoanNewApplication(LoanNewApplication loanNewApplication) {
        this.loanNewApplication = loanNewApplication;
    }
    
    
    
    @Column(name="reason")
    public String getReason() {
        return this.reason;
    }
    
    public void setReason(String reason) {
        this.reason = reason;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_on", length=19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }
    
    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }




}


