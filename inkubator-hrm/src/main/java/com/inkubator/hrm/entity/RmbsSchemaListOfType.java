package com.inkubator.hrm.entity;

// Generated Mar 13, 2015 9:01:09 AM by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RmbsSchemaListOfType generated by hbm2java
 */
@Entity
@Table(name = "rmbs_schema_list_of_type", catalog = "hrm"
)
public class RmbsSchemaListOfType implements java.io.Serializable {

	private RmbsSchemaListOfTypeId id;
	private Integer version;
	private RmbsSchema rmbsSchema;
	private RmbsType rmbsType;
	private Double limitPerClaim;
	private Double maxPerMonth;
	private Integer periodMethod;
	private Date createdOn;
	private String createdBy;
	private String updatedBy;
	private Date updatedOn;

	public RmbsSchemaListOfType() {
	}

	public RmbsSchemaListOfType(RmbsSchemaListOfTypeId id,
			RmbsSchema rmbsSchema, RmbsType rmbsType) {
		this.id = id;
		this.rmbsSchema = rmbsSchema;
		this.rmbsType = rmbsType;
	}

	@EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "rmbsTypeId", column = @Column(name = "rmbs_type_id", nullable = false)),
        @AttributeOverride(name = "rmbsSchemaId", column = @Column(name = "rmbs_schema_id", nullable = false))})
	public RmbsSchemaListOfTypeId getId() {
		return this.id;
	}

	public void setId(RmbsSchemaListOfTypeId id) {
		this.id = id;
	}

	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rmbs_schema_id", nullable = false, insertable = false, updatable = false)
	public RmbsSchema getRmbsSchema() {
		return this.rmbsSchema;
	}

	public void setRmbsSchema(RmbsSchema rmbsSchema) {
		this.rmbsSchema = rmbsSchema;
	}

	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rmbs_type_id", nullable = false, insertable = false, updatable = false)
	public RmbsType getRmbsType() {
		return this.rmbsType;
	}

	public void setRmbsType(RmbsType rmbsType) {
		this.rmbsType = rmbsType;
	}

	@Column(name = "limit_per_claim", nullable = false)
	public Double getLimitPerClaim() {
		return this.limitPerClaim;
	}

	public void setLimitPerClaim(Double limitPerClaim) {
		this.limitPerClaim = limitPerClaim;
	}

	@Column(name = "max_per_month", nullable = false)
	public Double getMaxPerMonth() {
		return this.maxPerMonth;
	}

	public void setMaxPerMonth(Double maxPerMonth) {
		this.maxPerMonth = maxPerMonth;
	}

	@Column(name = "period_method", nullable = false)
	public Integer getPeriodMethod() {
		return periodMethod;
	}

	public void setPeriodMethod(Integer periodMethod) {
		this.periodMethod = periodMethod;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

}
