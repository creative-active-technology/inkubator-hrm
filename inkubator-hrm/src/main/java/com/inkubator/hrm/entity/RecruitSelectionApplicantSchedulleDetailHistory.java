package com.inkubator.hrm.entity;
// Generated November 11, 2015 11:14:02 AM by Hibernate Tools 3.6.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * RecruitSelectionApplicantSchedulleDetailHistory generated by hbm2java
 */
@Entity
@Table(name = "recruit_selection_applicant_schedulle_detail_history", catalog = "hrm"
)
public class RecruitSelectionApplicantSchedulleDetailHistory implements java.io.Serializable {

    private Long id;
    private Long schedulleDetailId;
    private Long applicantId;
    private Long picEmpId;
    private String emailAddress;
    private String phoneNumber;
    private Integer emailNotification;
    private Integer smsNotification;
    private Date createdOn;
    private String createdBy;
 

    public RecruitSelectionApplicantSchedulleDetailHistory() {
    }

    public RecruitSelectionApplicantSchedulleDetailHistory(long id) {
        this.id = id;
    }

    

    public RecruitSelectionApplicantSchedulleDetailHistory(Long id, Long schedulleDetailId, Long applicantId,
			Long picEmpId, String emailAddress, String phoneNumber, Integer emailNotification, Integer smsNotification,
			Date createdOn, String createdBy) {
		super();
		this.id = id;
		this.schedulleDetailId = schedulleDetailId;
		this.applicantId = applicantId;
		this.picEmpId = picEmpId;
		this.emailAddress = emailAddress;
		this.phoneNumber = phoneNumber;
		this.emailNotification = emailNotification;
		this.smsNotification = smsNotification;
		this.createdOn = createdOn;
		this.createdBy = createdBy;
	}

	@Id
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }
    
    
    @Column(name = "email_notification")
    public Integer getEmailNotification() {
        return this.emailNotification;
    }

    public void setEmailNotification(Integer emailNotification) {
        this.emailNotification = emailNotification;
    }

    @Column(name = "sms_notification")
    public Integer getSmsNotification() {
        return this.smsNotification;
    }

    public void setSmsNotification(Integer smsNotification) {
        this.smsNotification = smsNotification;
    }

    @Column(name = "email_address")
    public String getEmailAddress() {
        return this.emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    @Column(name = "phone_number")
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }
    
    
    @Column(name = "schedulle_detail_id")
    public Long getSchedulleDetailId() {
		return schedulleDetailId;
	}

	public void setSchedulleDetailId(Long schedulleDetailId) {
		this.schedulleDetailId = schedulleDetailId;
	}
	
	@Column(name = "applicant_id")
	public Long getApplicantId() {
		return applicantId;
	}

	public void setApplicantId(Long applicantId) {
		this.applicantId = applicantId;
	}
	
	@Column(name = "pic_emp_id")
	public Long getPicEmpId() {
		return picEmpId;
	}

	public void setPicEmpId(Long picEmpId) {
		this.picEmpId = picEmpId;
	}
	
	@Column(name = "created_by")
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	

	@Override
    public String toString() {
        return "RecruitSelectionApplicantSchedulleDetailHistory{" + "id=" + id +  ", createdBy=" + createdBy 
        		+ ", createdOn=" + createdOn  + ", emailNotification=" + emailNotification + ", smsNotification=" 
        		+ smsNotification + ", emailAddress=" + emailAddress + ", phoneNumber=" + phoneNumber 
        		+ ", schedulleDetailId=" + schedulleDetailId + ", picEmpId=" + picEmpId + '}';
    }

    @Transient
    public String getEmailNotificationAsString() {
        String data = null;
        if(emailNotification == -1){
            data = "Email tidak perlu dikirim";
        }else if(emailNotification == 0){
            data = "Email belum dikirim";
        }else{
            data = "Email sudah dikirim";
        }
        
        return data;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((applicantId == null) ? 0 : applicantId.hashCode());
		result = prime * result + ((createdBy == null) ? 0 : createdBy.hashCode());
		result = prime * result + ((createdOn == null) ? 0 : createdOn.hashCode());
		result = prime * result + ((emailAddress == null) ? 0 : emailAddress.hashCode());
		result = prime * result + ((emailNotification == null) ? 0 : emailNotification.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((phoneNumber == null) ? 0 : phoneNumber.hashCode());
		result = prime * result + ((picEmpId == null) ? 0 : picEmpId.hashCode());
		result = prime * result + ((schedulleDetailId == null) ? 0 : schedulleDetailId.hashCode());
		result = prime * result + ((smsNotification == null) ? 0 : smsNotification.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		RecruitSelectionApplicantSchedulleDetailHistory other = (RecruitSelectionApplicantSchedulleDetailHistory) obj;
		if (applicantId == null) {
			if (other.applicantId != null)
				return false;
		} else if (!applicantId.equals(other.applicantId))
			return false;
		if (createdBy == null) {
			if (other.createdBy != null)
				return false;
		} else if (!createdBy.equals(other.createdBy))
			return false;
		if (createdOn == null) {
			if (other.createdOn != null)
				return false;
		} else if (!createdOn.equals(other.createdOn))
			return false;
		if (emailAddress == null) {
			if (other.emailAddress != null)
				return false;
		} else if (!emailAddress.equals(other.emailAddress))
			return false;
		if (emailNotification == null) {
			if (other.emailNotification != null)
				return false;
		} else if (!emailNotification.equals(other.emailNotification))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (phoneNumber == null) {
			if (other.phoneNumber != null)
				return false;
		} else if (!phoneNumber.equals(other.phoneNumber))
			return false;
		if (picEmpId == null) {
			if (other.picEmpId != null)
				return false;
		} else if (!picEmpId.equals(other.picEmpId))
			return false;
		if (schedulleDetailId == null) {
			if (other.schedulleDetailId != null)
				return false;
		} else if (!schedulleDetailId.equals(other.schedulleDetailId))
			return false;
		if (smsNotification == null) {
			if (other.smsNotification != null)
				return false;
		} else if (!smsNotification.equals(other.smsNotification))
			return false;
		return true;
	}
    
    
}
