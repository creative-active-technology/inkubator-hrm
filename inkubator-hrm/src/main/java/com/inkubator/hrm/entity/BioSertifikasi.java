package com.inkubator.hrm.entity;
// Generated Mar 4, 2015 3:29:56 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import org.apache.commons.lang3.StringUtils;

/**
 * BioSertifikasi generated by hbm2java
 */
@Entity
@Table(name="bio_sertifikasi", catalog="hrm_payroll")
public class BioSertifikasi  implements java.io.Serializable {


     private long id;
     private BioData bioData;
     private EducationNonFormal educationNonFormal;
     private OccupationType occupationType;
     private String namaSertifikasi;
     private String nomorDokumen;
     private String documentTitle;
     private String uploadPath;
     private String createdBy;
    private Date createdOn;
    private String updatedBy;
    private Date updatedOn;

    public BioSertifikasi() {
    }

	
    public BioSertifikasi(long id) {
        this.id = id;
    }
    public BioSertifikasi(long id, BioData bioData, EducationNonFormal educationNonFormal, OccupationType occupationType, String namaSertifikasi, String nomorDokumen) {
       this.id = id;
       this.bioData = bioData;
       this.educationNonFormal = educationNonFormal;
       this.occupationType = occupationType;
       this.namaSertifikasi = namaSertifikasi;
       this.nomorDokumen = nomorDokumen;
    }
   
     @Id     
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="bio_data_id")
    public BioData getBioData() {
        return this.bioData;
    }
    
    public void setBioData(BioData bioData) {
        this.bioData = bioData;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="education_non_formal")
    public EducationNonFormal getEducationNonFormal() {
        return this.educationNonFormal;
    }
    
    public void setEducationNonFormal(EducationNonFormal educationNonFormal) {
        this.educationNonFormal = educationNonFormal;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="occupation_type_id")
    public OccupationType getOccupationType() {
        return this.occupationType;
    }
    
    public void setOccupationType(OccupationType occupationType) {
        this.occupationType = occupationType;
    }

    
    @Column(name="nama_sertifikasi", length=60)
    public String getNamaSertifikasi() {
        return this.namaSertifikasi;
    }
    
    public void setNamaSertifikasi(String namaSertifikasi) {
        this.namaSertifikasi = namaSertifikasi;
    }

    
    @Column(name="nomor_dokumen", length=45)
    public String getNomorDokumen() {
        return this.nomorDokumen;
    }
    
    public void setNomorDokumen(String nomorDokumen) {
        this.nomorDokumen = nomorDokumen;
    }

    @Column(name = "document_title", length = 60)
	public String getDocumentTitle() {
		return documentTitle;
	}

	public void setDocumentTitle(String documentTitle) {
		this.documentTitle = documentTitle;
	}
        
        @Column(name = "upload_path", length = 100)
	public String getUploadPath() {
		return uploadPath;
	}
	
	public void setUploadPath(String uploadPath) {
		this.uploadPath = uploadPath;
	}
        
        @Column(name = "created_by", length = 45)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "updated_by", length = 45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Transient
	public String getUploadFileName(){
		String fileName = StringUtils.EMPTY;
		if(uploadPath!=null){
			fileName = StringUtils.substringAfterLast(uploadPath, "/");
		}
		return fileName;
	}
	
	@Transient
	public String getUploadFileExtension(){
		String fileName = StringUtils.EMPTY;
		if(uploadPath!=null){
			fileName = StringUtils.substringAfterLast(uploadPath, ".");
		}
		return fileName;
	}
}


