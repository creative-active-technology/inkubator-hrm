<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
    <!--  @author Deni Husni FR
    * In a standard web application, the authentication process may be automatically triggered when the client
    * tries to access a secured resource without being authenticated – this is usually done by redirecting to
    * a login page so that the user can enter credentials. However, for a REST Web Service this behavior doesn’t make much sense 
    * – Authentication should only be done by a request to the correct URI and all other requests should simply fail with 
    * a 401 UNAUTHORIZED status code if the user is not authenticated.-->
 
    <security:http entry-point-ref="restAuthenticationEntryPoint" pattern="/REST/**" use-expressions="true" >
        <security:intercept-url pattern="/REST/user_rest/**" access="hasAnyRole('ROLE_ADMIN_ALL','ROLE_ADMIN_IDM','ROLE_USER_IDM')"/>
        <!--<security:custom-filter ref="restFilter" position="FORM_LOGIN_FILTER"/>-->
        <security:form-login/>
        <security:logout/>
    </security:http>
    <bean id="restFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter" >
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="restSuccessHandler"/>
    </bean>
    <bean id="restSuccessHandler" class="com.csl.idm.web.filter.RestSavedRequestAwareAuthenticationSuccessHandler"/> 
   
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder hash="sha-256" />
            <security:user-service>
                <security:user name="master.admin" password="f89a34d294751b4bb49587b4419da31837209f64d23604844f166bae02e25259" authorities="ROLE_ADMIN_ALL" />
            </security:user-service>
        </security:authentication-provider>
        <security:authentication-provider user-service-ref="userDetailsService" >
            <security:password-encoder hash="sha-256" />
        </security:authentication-provider>
    </security:authentication-manager>
   

</beans>
