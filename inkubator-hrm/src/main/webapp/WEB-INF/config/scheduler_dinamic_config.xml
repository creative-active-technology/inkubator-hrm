<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
       	  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
       	  http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       	  http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
                   http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd">

   
    <!-- Annotation and Scheduling, set pooling size to prevent OutOfMemoryErrors, 
    please refer to http://docs.spring.io/spring/docs/3.1.x/spring-framework-reference/html/scheduling.html  -->
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"  />
    <task:executor id="myExecutor" pool-size="5-25" queue-capacity="100" />
    <task:scheduler id="myScheduler" pool-size="10"/>
   
    <bean id="schedulerConfigInitService" class="com.inkubator.hrm.service.impl.SchedulerConfigInitialisasiServiceImpl" lazy-init="false"  init-method="initMethode" />
    <bean id="scheduleDinamicService" class="com.inkubator.hrm.service.impl.ScheduleDinamicServiceImpl" lazy-init="false"  />
    
    <bean id="jmsTemplateUserPassNotif" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="userPassNotif"/>
    </bean> 
    <bean id="jmsTemplateApprovalNotif" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="approvalNotif"/>
    </bean> 
    <bean id="jmsTemplateDelAccessHis" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="delAccessHis"/>
    </bean> 
    <bean id="jmsTemplateDelLogHis" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="delLogHis"/>
    </bean> 
    <bean id="jmsTemplateHolidayUpdate" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="holidayUpdate"/>
    </bean> 
    <bean id="jmsTemplateScheduleWork" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="scheduleWork"/>
    </bean> 
    <bean id="jmsTemplateDelTempScheduleWork" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="delTempScheduleWork"/>
    </bean> 
    <bean id="jmsTemplateAutoApprovalMat" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="autoApprovalMat"/>
    </bean> 
    
    <bean id="jmsTemplateAddBalanceLeave" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="addBalanceLeave"/>
    </bean> 
    
    <bean id="jmsTemplateAddBalancePermit" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="addBalancePermit"/>
    </bean>
    
    <bean id="jmsTemplateCompanyPolicySend" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="companyPolicySend"/>
    </bean>
    
    <bean id="jmsTemplateAttendaceCalculatte" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="attendaceCalculatte"/>
    </bean>
    
    <bean id="jmsTemplateAnnoucmentGeneratingLog" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="annoucmentGeneratingLog"/>
    </bean>
    
    <bean id="jmsTemplateAnnoucmentSendingNotif" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="annoucmentSendingNotif"/>
    </bean>
    
    <bean id="jmsTemplateDeleteMonitoringLog" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="deleteMonitoringLog"/>
    </bean>
    
    <bean id="jmsTemplatePasswordComplexity" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="passwordComplexity"/>
    </bean>
    
      <bean id="jmsTemplateRecruitmetConfigEmp" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="recruitmetConfigEmp"/>
    </bean>
    
    <jms:listener-container container-type="default" connection-factory="connectionFactoryComsume" acknowledge="transacted" 
                            transaction-manager="jsmTransaction"   >
        <jms:listener destination="userPassNotif" ref="checkPasswordHistoryEmailNotSendServiceListener" method="onMessage"  /> 
        <jms:listener destination="delAccessHis" ref="deleteRiwayatAksesListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="delLogHis" ref="deleteLogHistoryListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="delTempScheduleWork" ref="deleteTempEmpShceduleListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="approvalNotif" ref="approvalActivityNotSendListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="autoApprovalMat" ref="approvalActivityAutoApproveListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="addBalanceLeave" ref="leaveCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="addBalancePermit" ref="permitCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="companyPolicySend" ref="companyPolicyCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="attendaceCalculatte" ref="attendanceCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="annoucmentGeneratingLog" ref="announcementGenerateLogCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="annoucmentSendingNotif" ref="announcementEmailNonSendLogCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="holidayUpdate" ref="wtHolidayCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="scheduleWork" ref="calculateScheduleWorkCronListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="deleteMonitoringLog" ref="deleteLogMonitoringListenerServiceImpl" method="onMessage"  /> 
        <jms:listener destination="passwordComplexity" ref="calculatePasswordComplexityCronListenerServiceImpl" method="onMessage"  /> 
        
    </jms:listener-container>
    <!--================== List dari semua listener scheduller... di sini ==========================-->
    <bean id="checkPasswordHistoryEmailNotSendServiceListener" class="com.inkubator.hrm.service.impl.CheckPasswordHistoryEmailNotSendListenerServiceImpl" lazy-init="true" >
        <property name="applicationUrl" value="${email_param_application_url}"/>
        <property name="applicationName" value="${email_param_application_name}"/>
        <property name="ownerEmail" value="${email_param_owner_email}"/>
        <property name="ownerCompany" value="${email_param_owner_company}"/>
        <property name="ownerAdministrator" value="${email_param_owner_administrator}"/>
    </bean>
    
    <bean id="deleteRiwayatAksesListenerServiceImpl" class="com.inkubator.hrm.service.impl.DeleteRiwayatAksesListenerServiceImpl" lazy-init="true" >
        <property name="difWeekToDelete" value="${dif.number.week.to.delete}"/>
    </bean>
    <bean id="deleteLogHistoryListenerServiceImpl" class="com.inkubator.hrm.service.impl.DeleteLogHistoryListenerServiceImpl" lazy-init="true" >
        <property name="difWeekToDelete" value="${dif.number.week.to.delete}"/>
    </bean>
    <bean id="deleteTempEmpShceduleListenerServiceImpl" class="com.inkubator.hrm.service.impl.DeleteTempEmpShceduleListenerServiceImpl" lazy-init="true" >
        <property name="difNumberOfMonthTempEmployeeScheduleToDelete" value="${dif.number.month.temp.employee.schedule.to.delete}"/>       
    </bean>
  
    <bean id="approvalActivityNotSendListenerServiceImpl" class="com.inkubator.hrm.service.impl.ApprovalActivityNotSendListenerServiceImpl" lazy-init="true">
        <property name="applicationUrl" value="${email_param_application_url}"/>
        <property name="applicationName" value="${email_param_application_name}"/>
        <property name="ownerEmail" value="${email_param_owner_email}"/>
        <property name="ownerCompany" value="${email_param_owner_company}"/>
        <property name="ownerAdministrator" value="${email_param_owner_administrator}"/>
        
    </bean>
    
    
    <bean id="approvalActivityAutoApproveListenerServiceImpl" class="com.inkubator.hrm.service.impl.ApprovalActivityAutoApproveListenerServiceImpl" lazy-init="true"/>
    <bean id="leaveCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.LeaveCronListenerServiceImpl" lazy-init="true"/>
    <bean id="permitCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.PermitCronListenerServiceImpl" lazy-init="true"/>
    <bean id="companyPolicyCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.CompanyPolicyCronListenerServiceImpl" lazy-init="true"/>
    <bean id="attendanceCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.AttendanceCronListenerServiceImpl" lazy-init="true"/>
    <bean id="announcementGenerateLogCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.AnnouncementGenerateLogCronListenerServiceImpl" lazy-init="true">
        <property name="applicationUrl" value="${email_param_application_url}"/>
        <property name="applicationName" value="${email_param_application_name}"/>
        <property name="ownerEmail" value="${email_param_owner_email}"/>
        <property name="ownerCompany" value="${email_param_owner_company}"/>
        <property name="ownerAdministrator" value="${email_param_owner_administrator}"/>    
    </bean>
    <bean id="announcementEmailNonSendLogCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.AnnouncementEmailNonSendLogCronListenerServiceImpl" lazy-init="true"/>
    <bean id="wtHolidayCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.WtHolidayCronListenerServiceImpl" lazy-init="true"/>
    <bean id="calculateScheduleWorkCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.CalculateScheduleWorkCronListenerServiceImpl" lazy-init="true"/>
    <bean id="deleteLogMonitoringListenerServiceImpl" class="com.inkubator.hrm.service.impl.DeleteLogMonitoringListenerServiceImpl" lazy-init="true">
        <property name="difMonthLogMonitoringToDelete" value="${dif.number.month.log_monit.to.delete}"/>
    </bean>
    <bean id="calculatePasswordComplexityCronListenerServiceImpl" class="com.inkubator.hrm.service.impl.CalculatePasswordComplexityCronListenerServiceImpl" lazy-init="true" >
    	<property name="applicationUrl" value="${email_param_application_url}"/>
        <property name="applicationName" value="${email_param_application_name}"/>
        <property name="ownerEmail" value="${email_param_owner_email}"/>
        <property name="ownerCompany" value="${email_param_owner_company}"/>
        <property name="ownerAdministrator" value="${email_param_owner_administrator}"/> 
    </bean>
    
    
</beans>
