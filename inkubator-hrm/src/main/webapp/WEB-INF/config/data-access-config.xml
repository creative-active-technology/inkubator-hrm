<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd">

    <context:property-placeholder location="classpath*:*.properties"/>
<!--    <aop:aspectj-autoproxy>
        <aop:include name="daoServiceLog" />
    </aop:aspectj-autoproxy>-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->
<!--    <jee:jndi-lookup id="dataSourceJBoss" jndi-name="java:jboss/MysqlXADS"
      expected-type="javax.sql.DataSource"/>
    <jee:jndi-lookup id="dataSourceJBoss2" jndi-name="java:jboss/MysqlXADS2"
      expected-type="javax.sql.DataSource"/>-->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" 
          destroy-method="close" init-method="init">
        <property name="forceShutdown" value="false"/>
        <!--<property name="startupTransactionService" value="false"/>-->
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
      <property name="transactionTimeout" value="300" />
    </bean>
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
      <property name="transactionManager" ref="atomikosTransactionManager" />
      <property name="userTransaction" ref="atomikosUserTransaction" />
      <property name="allowCustomIsolationLevels" value="true"/>
    </bean>
    
    <bean id="atomikosDataSourceMySqlXA" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="MAIN-ATOMIKOS-CONNECTION" />
        <property name="minPoolSize" value="10" />
        <property name="maxPoolSize" value="30" />
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="borrowConnectionTimeout" value="30" />
        <property name="testQuery" value="select 1" />
        <property name="maintenanceInterval" value="60" />  
        <property name="xaProperties" ref="databaseProperties" />
    </bean>
    <util:properties id="databaseProperties" location="classpath:database.properties" />
   <tx:annotation-driven/>
   <tx:jta-transaction-manager id="transactionManager"/>
   
<!--   <bean id="c3p0DataSourceAbstract" class="com.mchange.v2.c3p0.ComboPooledDataSource" abstract="true" destroy-method="close">
        <property name="acquireIncrement" value="5"/>
        <property name="acquireRetryAttempts" value="3"/>
        <property name="acquireRetryDelay" value="4500"/>
        <property name="maxPoolSize" value="100"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxStatements" value="50"/>
        <property name="maxIdleTime" value="3600" />
        <property name="autoCommitOnClose" value="false" />
        <property name="initialPoolSize" value="5" />
        <property name="maxConnectionAge" value="7200" />
        <property name="maxIdleTimeExcessConnections" value="600" />
        <property name="preferredTestQuery" value="select 1 from DUAL" />
        <property name="idleConnectionTestPeriod" value="180" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="testConnectionOnCheckout" value="false" />
        <property name="connectionCustomizerClassName" value="com.csl.reqruitment.test.ConnectionPoolLogger"/>
    </bean>


    <bean id="c3p0DataSource-1" parent="c3p0DataSourceAbstract" lazy-init="true">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="${jdbc1.url}"/>
        <property name="user" value="${jdbc1.userName}"/>
        <property name="password" value="${jdbc1.password}"/>
    </bean>-->

<!--    <bean id="c3p0DataSource-2" parent="c3p0DataSourceAbstract" lazy-init="true">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="${jdbc2.url}"/>
        <property name="user" value="${jdbc2.userName}"/>
        <property name="password" value="${jdbc2.password}"/>
    </bean>-->

<!--    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="c3p0DataSource-2" />
        <property name="packagesToScan" value="com.csl.reqruitment.entity" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" /> 
                <property name="showSql" value="true" />
                <property name="generateDdl" value="true" />
            </bean>
        </property>
    </bean>
    
    <bean id="entityManagerFactory-1"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="c3p0DataSource-1" />
        <property name="packagesToScan" value="com.csl.reqruitment.entity" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" /> 
                <property name="showSql" value="true" />
                <property name="generateDdl" value="true" />
            </bean>
        </property>
    </bean>-->
    
    <!--    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
    </bean>
    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager-1" >
        <property name="entityManagerFactory" ref="entityManagerFactory-1" />
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
    </bean>-->
    
    <!--    <jpa:repositories base-package="com.csl.reqruitment.dao" 
    entity-manager-factory-ref="entityManagerFactory" 
    transaction-manager-ref="transactionManager" />
<jpa:repositories base-package="com.csl.reqruitment.dao1" 
    entity-manager-factory-ref="entityManagerFactory-1" 
    transaction-manager-ref="transactionManager-1" />-->
<!--    <context:component-scan base-package="com.sample.flow.jsf.dao" />
    <context:component-scan base-package="com.csl.data.core.dao.daoimplementasi" />-->
    <context:component-scan base-package="com.sample.flow.jsf.service" />
     <context:component-scan base-package="com.sample.flow.jsf.dao" />
   
    <!--Spring Hibernate Configuration-->
     <bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory" lazy-init="true">
    <!--<bean class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" id="sessionFactory" lazy-init="true">-->
        <property name="dataSource"  ref="atomikosDataSourceMySqlXA"/>
        <property name="packagesToScan" value="com.sample.flow.jsf.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                  <!--<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!--<prop key="hibernate.current_session_context_class">com.csl.data.core.util.TransactionAwareSessionContext</prop>-->
                 <prop key="hibernate.current_session_context_class">jta</prop>
                 <!--<prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JBossTransactionManagerLookup</prop>-->
                <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
                <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop>
<!--                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>-->
<!--                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <!--<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>-->
                
<!--                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="org.hibernate.envers.audit_table_suffix">_audit</prop>-->
                 <!--<prop key="jta.UserTransaction">java:/jboss/UserTransaction</prop>-->
            </props>
        </property>
        
    </bean>
    
    
<!--      <bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory2" lazy-init="true">
    <bean class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" id="sessionFactory2" lazy-init="true">
        <property name="dataSource"  ref="dataSourceJBoss2"/>
        <property name="packagesToScan" value="com.sample.flow.jsf.entity2"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                  <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.current_session_context_class">com.csl.data.core.util.TransactionAwareSessionContext</prop>
                 <prop key="hibernate.current_session_context_class">jta</prop>
                 <prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JBossTransactionManagerLookup</prop>
                 <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="org.hibernate.envers.audit_table_suffix">_audit</prop>
                 <prop key="jta.UserTransaction">java:/jboss/UserTransaction</prop>
            </props>
        </property>
        
    </bean>-->
<!--    <bean class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" id="sessionFactory-2" lazy-init="true">
        <property name="dataSource"  ref="c3p0DataSource-2"/>
        <property name="packagesToScan" value="com.csl.datacore.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache_1.xml</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="org.hibernate.envers.audit_table_suffix">_audit</prop>
            </props>
        </property>
        
    </bean>-->
<!--    <bean class="org.springframework.transaction.jta.JtaTransactionManager" id="transactionManager">
        <property name="allowCustomIsolationLevels" value="true" />
         
    </bean>-->
<!--    <bean class="org.springframework.orm.hibernate4.HibernateTransactionManager" id="transactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->
    <!--    <bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" id="transactionManager-2" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory-2"/>
    </bean>-->
    
<!--    <bean class="com.sample.flow.jsf.sample.CityDaoImplementasi" id="cityDao" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory2"/>
    </bean>
    
    <bean class="com.sample.flow.jsf.dao.daoimpl.CountryDaoImplementasi" id="countryDao" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean class="com.sample.flow.jsf.dao.daoimpl.ProvinceDaoImplementasi" id="ProvinceDao" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->
    
    <!--    <bean class="com.sample.flow.jsf.dao.daoimpl.SpiUserDaoImplementasi" id="spiUserDao" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->
    
    <!--    <bean class="com.sample.flow.jsf.dao.daoimpl.LoginHistoryDaoImplementasi" id="loginHistoryDao" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->
    
    <!--    <bean class="com.sample.flow.jsf.dao.daoimpl.SpiRoleDaoImplementasi" id="spiRoleDao" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->
    <!--      <bean class="com.csl.datacore.dao.daoimplementasi.CityDaoImplementasi1" id="cityDao1" lazy-init="true">
        <property name="sessionFactory" ref="sessionFactory-2"/>
    </bean>-->
<!--    <bean id="jmxExporter"
          class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="Hibernate:type=statistics">
                    <ref local="statisticsBean" />
                </entry>
            </map>
        </property>
    </bean> 

    <bean id="statisticsBean" class="org.hibernate.jmx.StatisticsService">
        <property name="statisticsEnabled">
            <value>true</value>
        </property>
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>-->
    <!--<bean class="com.sample.flow.jsf.util.DaoServiceLog" id="daoServiceLog"/>--> 
</beans>
