<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:jms="http://www.springframework.org/schema/jms"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
          http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
">

    
    <bean id="connectionFactoryExpose" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616" />
        <property name="prefetchPolicy">
            <bean class="org.apache.activemq.ActiveMQPrefetchPolicy">
                <property name="queuePrefetch" value="10"/>
            </bean>
        </property>
        <property name="redeliveryPolicy">
            <bean class="org.apache.activemq.RedeliveryPolicy">
                <property name="initialRedeliveryDelay" value="1000"/>
                <property name="maximumRedeliveries" value="10"/>
                <property name="useExponentialBackOff" value="false"/>
            </bean>
        </property>
    </bean>
    <bean id="connectionFactoryComsume" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="nio://localhost:61616" />
        <property name="prefetchPolicy">
            <bean class="org.apache.activemq.ActiveMQPrefetchPolicy">
                <property name="queuePrefetch" value="10"/>
            </bean>
        </property>
        <property name="redeliveryPolicy">
            <bean class="org.apache.activemq.RedeliveryPolicy">
                <property name="initialRedeliveryDelay" value="1000"/>
                <property name="maximumRedeliveries" value="10"/>
                <property name="useExponentialBackOff" value="false"/>
            </bean>
        </property>
    </bean>
<!--    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="loginHistoryHrm"/>
        <property name="receiveTimeout" value="50">
        
    </bean>  -->
    
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="notificationUserHrm"/>
        
    </bean> 
    <bean id="jmsTemplateUserAccess" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="notificationUserAccess"/>
        
    </bean> 
    <bean id="jmsTemplateApproval" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="notificationApproval"/>
        
    </bean>
    <bean id="jmsTemplateApprovalGrowl" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="notificationApprovalGrowl"/>
        
    </bean> 
    
    <bean id="jmsTemplateJadwalKerja" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="notificationJadwalKerja"/>
        
    </bean> 
    <bean id="jmsTemplateMassJadwalKerja" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <constructor-arg name="connectionFactory" ref="connectionFactoryExpose"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestinationName" value="notificationMassJadwalKerja"/>
        
    </bean> 
    

    <bean id="notificationUserMessagesListener" class="com.inkubator.hrm.service.impl.NotificationUserMessagesListener" lazy-init="true">
        <property name="applicationUrl" value="${email_param_application_url}"/>
        <property name="applicationName" value="${email_param_application_name}"/>
        <property name="ownerEmail" value="${email_param_owner_email}"/>
        <property name="ownerCompany" value="${email_param_owner_company}"/>
        <property name="ownerAdministrator" value="${email_param_owner_administrator}"/>
    </bean>
    <bean id="riwayatAccessMessagesListener" class="com.inkubator.hrm.service.impl.RiwayatAccessMessagesListener" lazy-init="true"/>
    <bean id="notificationApprovalMessagesListener" class="com.inkubator.hrm.service.impl.NotificationApprovalMessagesListener" lazy-init="true">
        <property name="applicationUrl" value="${email_param_application_url}"/>
        <property name="applicationName" value="${email_param_application_name}"/>
        <property name="ownerEmail" value="${email_param_owner_email}"/>
        <property name="ownerCompany" value="${email_param_owner_company}"/>
        <property name="ownerAdministrator" value="${email_param_owner_administrator}"/>
    </bean>
    <bean id="jadwalKerjaMessagesListener" class="com.inkubator.hrm.service.impl.JadwalKerjaUpdateMessagesListener" lazy-init="true" />
    <bean id="notificationApprovalGrowlMessagesListener" class="com.inkubator.hrm.service.impl.NotificationApprovalGrowlMessagesListener" lazy-init="true"/>    
    <bean id="jadwalKerjaMassMessagesListener" class="com.inkubator.hrm.service.impl.JadwalKerjaMassMessagesListener" lazy-init="true" />
    <jms:listener-container container-type="default" connection-factory="connectionFactoryComsume" acknowledge="transacted" 
                            transaction-manager="jsmTransaction"   >
        
        <jms:listener destination="notificationUserHrm" ref="notificationUserMessagesListener" method="onMessage"  /> 
        <jms:listener destination="notificationUserAccess" ref="riwayatAccessMessagesListener" method="onMessage"  />
        <jms:listener destination="notificationApproval" ref="notificationApprovalMessagesListener" method="onMessage"  />
        <jms:listener destination="notificationApprovalGrowl" ref="notificationApprovalGrowlMessagesListener" method="onMessage"  />
        <jms:listener destination="notificationJadwalKerja" ref="jadwalKerjaMessagesListener" method="onMessage"  />
        <jms:listener destination="notificationMassJadwalKerja" ref="jadwalKerjaMassMessagesListener" method="onMessage"  />
    </jms:listener-container>
    
    <bean id="jsmTransaction" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="connectionFactoryComsume"/>
    </bean>
</beans>
